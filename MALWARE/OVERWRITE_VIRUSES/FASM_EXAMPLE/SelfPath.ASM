;
;     FASM - PATH FILE 
;     Getting path of file.
;     FROM VIDEO:
;	   https://www.youtube.com/watch?v=lsSmEvai3jY
;
;     DO NOT USE THIS CODE !
;
;     0xD3struction
;
;    2o23


format PE Console
include 'win32a.inc'
entry Path_Example

section '.data' data readable writable
        intro db '[0xD3struction]',10,'Path File. ',10,10,0
        b4_str db 'File Path Before: %s ',10,10,0
        after_str db  'File Path After: %s ',10,10,0
        sys_arg db 'Pause',0


section '.code' code readable executable

        Path_Example:
                                
                push ebp                          ; STACK FRAME : for local vars
                mov ebp,esp                       ;
                sub esp,0xc                       ; 
                                 
                push intro                             ;
                call [printf]                         ; [C] : printf("[0xD3struction] \n File Path: %s \n\n",[ebp-4]);
                add esp,0x04
                                
                                
                call [GetCommandLineA]                ; [C] GetCommandLine()
                mov [ebp-0x04],eax                    ; saving offset to
                                
                                
                push eax
                push b4_str
                call [printf]
                add esp,0x08
                                
                mov eax,[ebp-0x04]


                cmp byte[eax],0x22                    ; checking first sign of path, if it is quote mark then virus have to delete it [C] : if(VirusPath[0]=='"'):
                    jne No_Quote                      ; FOR EG. GetCommandLineA sometimes returns  '"123.EXE"' NOT '123.EXE' (couple months ago returns no quote string oO
                    inc eax                           ; thats could be easyli checked and fixed) DELETING FIRST ' " ' [C] char * path2 = path+1;

                    push eax                          ; path on stack 
                    call [strlen]                     ; strlen returns:     EAX : string length    ECX : pointer to previous argument(EAX)
                    add esp,0x04                      ; stack correction  (Windows functions like CreateFileA doing this automaticly)                                                                
                                                      ;                                                                                                                   
                    dec eax                           ; String length - 1                                                   
                    add ecx,eax                       ; Seting "cursor" on the last sign                                                                        
                    mov byte [ecx],0x00               ; here virus delete ' " ' from end.  [C] :  VirusPath[Virlen-1]=0x00;                                                                
                    sub ecx,eax                       ; rewind coursor to string start

                    mov [ebp-0x04],ecx                ; saving correct path to file
         No_Quote:
                push dword [ebp-4]                    ;
                push after_str                             ;
                call [printf]                         ; [C] : printf("[0xD3struction] \n File Path: %s \n\n",[ebp-4]);
                add esp,0x08

                push sys_arg
                call [system]                         ; [C] : system("pause");
                add esp,0x04
                                
                                
                add esp,0x0c
                pop ebp
                xor eax,eax
                ret                                  ; return 0;
                                
section '.idata' import readable writable

library kernel,'KERNEL32.DLL',msvcrt,'MSVCRT.DLL'

   import msvcrt,\
                  printf,'printf',\
                  system,'system',\
                  strlen,'strlen'

   import kernel,\
                  GetCommandLineA, 'GetCommandLineA'
                                        
