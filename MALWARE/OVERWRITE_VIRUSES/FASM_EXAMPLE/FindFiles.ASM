;
;     FASM - Finding Files
;      Finding files (*.exe & *.EXE)
;     FROM VIDEO:
;	   https://www.youtube.com/watch?v=lsSmEvai3jY
;
;     DO NOT USE THIS CODE !
;
;     0xD3struction
;
;    2o23

format PE Console
include 'win32a.inc'
entry Find_Files_Start

section '.data' data readable writable
         intro db '[0xD3struction] (F)ASM - FINDING FILES EXAMPLE',10,10,0
         WinFindData rb 320
         Path db '*.*',0          ;I know that I could use *.EXE and *.exe but this would be too easy and uneffective.
         DirHand dd 0x00000000
         ItsEXE db '[+] %s',10,0
         NoExe db '[-] %s ',10,0
         sys_arg db 'pause',0

Find_Files_Start:
               push intro
               call [printf]
               add esp,4


               push WinFindData                                   ;
               push Path                                          ;
               call [FindFirstFileA]                              ; [C] FindFirstFile(Path,&WinFindData);
                                
               mov dword [DirHand],eax                            ; saving dir handle
                                
                     FindLoop:
                                
                            push WinFindData                       ;
                            push dword [DirHand]                   ;
                            call [FindNextFileA]                   ;
                                                                   ;
                                                                   ;
                            cmp eax,0                              ; 
                            je EndFun                              ; [C] while(FindNextFile(DirHand,&WinFindData) {
                                
                            lea ebx,[WinFindData+0x2C]             ; [C/ASM] EBX = WinFindData.FileName;
                        
                                
                            push ebx                                                   ;
                            call [strlen]                                                  ; 
                            add esp,0x04                           ;
                                                                   ;
                            cmp eax,0x05                           ;
                            jb FindLoop                            ; [C/ASM] : if(strlen(EAX)<0x05) continue;
                                
                            mov ecx,[ebx+eax-0x04]                 ; ECX = last four signs - file extension
                            cmp ecx,0x6578652E                     ; 
                            je Its_exe                             ; [C/ASM] : if(ECX=='exe.') goto Its_exe;
                            cmp ecx,0x4558452E                     ; 
                            je Its_exe                             ; [C/ASM] : if(ECX=='EXE.') goto Its_exe;
                            jmp No_exe                             ; goto No_Exe
                    Its_exe:            
                            push ebx                               ;
                            push ItsEXE                            ;
                            call [printf]                          ; printf("[+] %s \n",EBX);
                            add esp,0x04
                                                        
                            jmp FindLoop                           ;[C] continue;
                                                   
                    No_exe:            
                           push ebx                                ;
                           push NoExe                              ;
                           call [printf]                           ; printf("[-] %s\n",ebx);
                           add esp,8                               
                                                   
                

                          jmp FindLoop
                   EndFun:
                          push sys_arg
                          call [system]
                          add esp,0x04

                          xor eax,eax
                          ret
                                
                                
section 'idata' import data readable writeable

   library kernel,'KERNEL32.DLL',msvcrt,'MSVCRT.DLL'

   import msvcrt,\
                  printf,'printf',\
                  strlen,'strlen',\
                  system,'system'

   import kernel,\
                  FindFirstFileA,'FindFirstFileA',\
                  FindNextFileA,'FindNextFileA',\
                  WriteFile,'WriteFile'
